tajima.test(x)[1]
sfs<-NULL
alter=T
for(i in 1:100){
if(alter==F){x<-ms(nreps = 1, nsam=100, opts="-s 1000")}
if(alter==T){seq<-NULL
for(j in 1:1000){
x<-ms(nreps = 1, nsam=100, opts="-s 1")
seq<-cbind(seq,x[5:length(x)])
cap<-x[1:4]
}
x<-apply(seq,1,paste,collapse="")
cap[1]<-"ms 100 1 -s 1000"
cap[2]<-"//"
cap[3]<-"segsites: 1000"
cap[4]<-"positions:"
x<-c(cap,x)
}
x<-ms.to.DNAbin(x,bp.length=0)
p<-pi(x)
td<-tajima.test(x)[1]
#sspec<-site.spectrum(x,folded=F)
#plot(sspec)
#y<-sspec/sum(na.omit(sspec))
sfs<-rbind(sfs,c(p,td))
print(i)
}
popb<-sfs
sfs<-NULL
alter=F
for(i in 1:100){
if(alter==F){x<-ms(nreps = 1, nsam=100, opts="-s 1000")}
if(alter==T){seq<-NULL
for(j in 1:1000){
x<-ms(nreps = 1, nsam=100, opts="-s 1")
seq<-cbind(seq,x[5:length(x)])
cap<-x[1:4]
}
x<-apply(seq,1,paste,collapse="")
cap[1]<-"ms 100 1 -s 1000"
cap[2]<-"//"
cap[3]<-"segsites: 1000"
cap[4]<-"positions:"
x<-c(cap,x)
}
x<-ms.to.DNAbin(x,bp.length=0)
p<-pi(x)
td<-tajima.test(x)[1]
#sspec<-site.spectrum(x,folded=F)
#plot(sspec)
#y<-sspec/sum(na.omit(sspec))
sfs<-rbind(sfs,c(p,td))
print(i)
}
popa<-sfs
plot(popa[1,])
plot(popa[,1])
popa
plot(popa[,1])
a<-colMeans(popa)
a<-colMeans(popa)
popa
popa<-as.matrix(popa)
popa
plot(popa[,1])
plot(density(popa[,1]))
popa[,1]
popa[,1]
popb[,1]
c(p,td)
td
tajima.test(x)[1]
tajima.test(x)$D
pi(x)
sfs<-NULL
alter=F
for(i in 1:100){
if(alter==F){x<-ms(nreps = 1, nsam=100, opts="-s 1000")}
if(alter==T){seq<-NULL
for(j in 1:1000){
x<-ms(nreps = 1, nsam=100, opts="-s 1")
seq<-cbind(seq,x[5:length(x)])
cap<-x[1:4]
}
x<-apply(seq,1,paste,collapse="")
cap[1]<-"ms 100 1 -s 1000"
cap[2]<-"//"
cap[3]<-"segsites: 1000"
cap[4]<-"positions:"
x<-c(cap,x)
}
x<-ms.to.DNAbin(x,bp.length=0)
p<-pi(x)
td<-tajima.test(x)$D
#sspec<-site.spectrum(x,folded=F)
#plot(sspec)
#y<-sspec/sum(na.omit(sspec))
sfs<-rbind(sfs,c(p,td))
print(i)
}
popa<-sfs
sfs<-NULL
alter=T
for(i in 1:100){
if(alter==F){x<-ms(nreps = 1, nsam=100, opts="-s 1000")}
if(alter==T){seq<-NULL
for(j in 1:1000){
x<-ms(nreps = 1, nsam=100, opts="-s 1")
seq<-cbind(seq,x[5:length(x)])
cap<-x[1:4]
}
x<-apply(seq,1,paste,collapse="")
cap[1]<-"ms 100 1 -s 1000"
cap[2]<-"//"
cap[3]<-"segsites: 1000"
cap[4]<-"positions:"
x<-c(cap,x)
}
x<-ms.to.DNAbin(x,bp.length=0)
p<-pi(x)
td<-tajima.test(x)$D
#sspec<-site.spectrum(x,folded=F)
#plot(sspec)
#y<-sspec/sum(na.omit(sspec))
sfs<-rbind(sfs,c(p,td))
print(i)
}
popb<-sfs
plot(density(popb[,1]))
plot(density(popa[,1]))
plot(popa[,1]~popb[,1])
a<-colMeans(popa)
b<-colMeans(popb)
plot(a~b)
abline(lm(a~b))
a
b
sfs<-NULL
alter=F
for(i in 1:100){
if(alter==F){x<-ms(nreps = 1, nsam=100, opts="-s 1000 -r 1000 1000")}
if(alter==T){seq<-NULL
for(j in 1:1000){
x<-ms(nreps = 1, nsam=100, opts="-s 1")
seq<-cbind(seq,x[5:length(x)])
cap<-x[1:4]
}
x<-apply(seq,1,paste,collapse="")
cap[1]<-"ms 100 1 -s 1000"
cap[2]<-"//"
cap[3]<-"segsites: 1000"
cap[4]<-"positions:"
x<-c(cap,x)
}
x<-ms.to.DNAbin(x,bp.length=0)
p<-pi(x)
td<-tajima.test(x)$D
#sspec<-site.spectrum(x,folded=F)
#plot(sspec)
#y<-sspec/sum(na.omit(sspec))
sfs<-rbind(sfs,c(p,td))
print(i)
}
popa<-sfs
a<-colMeans(popa)
b<-colMeans(popb)
plot(a~b)
a
b
sfs<-NULL
alter=F
for(i in 1:100){
if(alter==F){x<-ms(nreps = 1, nsam=50, opts="-s 1000 -r 1 1000")}
if(alter==T){seq<-NULL
for(j in 1:1000){
x<-ms(nreps = 1, nsam=50, opts="-s 1")
seq<-cbind(seq,x[5:length(x)])
cap<-x[1:4]
}
x<-apply(seq,1,paste,collapse="")
cap[1]<-"ms 100 1 -s 1000"
cap[2]<-"//"
cap[3]<-"segsites: 1000"
cap[4]<-"positions:"
x<-c(cap,x)
}
x<-ms.to.DNAbin(x,bp.length=0)
p<-pi(x)
td<-tajima.test(x)$D
#sspec<-site.spectrum(x,folded=F)
#plot(sspec)
#y<-sspec/sum(na.omit(sspec))
sfs<-rbind(sfs,c(p,td))
print(i)
}
library(plot3D)
pi<-rnorm(100,0.001,0.0005)
pi
library(help="plot3D-package")
library(help=plot3D)
?scatter3D()
pi2<-rnorm(100,0.005,0.001)
Fst<-rnorm(100,0.5,0.1)
scatter3D(pi,pi2,Fst)
Fst<-rnorm(1000,0.5,0.1)
Fst<-rnorm(1000,0.5,0.1)
pi2<-rnorm(1000,0.005,0.001)
scatter3D(pi,pi2,Fst)
pi<-rnorm(1000,0.001,0.0005)
scatter3D(pi,pi2,Fst)
scatter3D(pi,pi2,Fst,col="red")
pia1<-rnorm(1000,0.001,0.0005)
pia2<-rnorm(1000,0.005,0.001)
fsta<-rnorm(1000,0.5,0.1)
fsta<-rnorm(1000,0.5,0.1)
fstb<-rnorm(1000,0.8,0.1)
fstc<-rnorm(1000,0.1,0.05)
scatter3D(pia1,pia2,fsta,col="red")
scatter3D(pia1,pia2,fstb,col="blue",add=T)
scatter3D(pia1,pia2,fstc,col="yellow",add=T)
scatter3D(pia1,pia2,fstc,col="green",add=T)
fsta<-rnorm(1000,0.5,0.1)
fstb<-rnorm(1000,0.6,0.1)
fstc<-rnorm(1000,0.4,0.1)
scatter3D(pia1,pia2,fsta,col="red")
scatter3D(pia1,pia2,fstb,col="blue",add=T)
scatter3D(pia1,pia2,fstc,col="green",add=T)
scatter3D(pia1,pia2,fstb,col="ciano",add=T)
scatter3D(pia1,pia2,fsta,col="coral1")
scatter3D(pia1,pia2,fstb,col="blue2",add=T)
scatter3D(pia1,pia2,fstb,col="blue1",add=T)
scatter3D(pia1,pia2,fsta,col="coral1")
scatter3D(pia1,pia2,fstb,col="blue1",add=T)
scatter3D(pia1,pia2,fsta,col="coral1")
scatter3D(pia1,pia2,fstb,col="blue4",add=T)
scatter3D(pia1,pia2,fstc,col="yellow3",add=T)
scatter3D(pia1,pia2,fstc,col="yellow4",add=T)
scatter3D(pia1,pia2,fsta,col="coral1")
scatter3D(pia1,pia2,fstb,col="green4",add=T)
scatter3D(pia1,pia2,fsta,col="coral4")
scatter3D(pia1,pia2,fstb,col="green4",add=T)
scatter3D(pia1,pia2,fstb,col="pink4",add=T)
scatter3D(pia1,pia2,fsta,col="coral4")
scatter3D(pia1,pia2,fstb,col="pink4",add=T)
scatter3D(pia1,pia2,fsta,col="coral1")
scatter3D(pia1,pia2,fstb,col="pink4",add=T)
scatter3D(pia1,pia2,fsta,col="coral1")
scatter3D(pia1,pia2,fstb,col="yellow5",add=T)
scatter3D(pia1,pia2,fstb,col="yellow4",add=T)
scatter3D(pia1,pia2,fsta,col="coral1")
scatter3D(pia1,pia2,fstb,col="yellow1",add=T)
scatter3D(pia1,pia2,fstc,col="green2",add=T)
scatter3D(pia1,pia2,fsta,col="coral1")
scatter3D(pia1,pia2,fsta,col="red1")
scatter3D(pia1,pia2,fsta,col="red3")
scatter3D(pia1,pia2,fstb,col="yellow1",add=T)
scatter3D(pia1,pia2,fstb,col="yellow2",add=T)
scatter3D(pia1,pia2,fsta,col="red3")
scatter3D(pia1,pia2,fstb,col="yellow2",add=T)
scatter3D(pia1,pia2,fstc,col="green2",add=T)
scatter3D(pia1,pia2,fstc,col="green3",add=T)
scatter3D(pia1,pia2,fsta,col="red3")
scatter3D(pia1,pia2,fstb,col="yellow2",add=T)
scatter3D(pia1,pia2,fstc,col="green3",add=T)
scatter3D(pia1,pia2,fsta,col="red3")
scatter3D(pia1,pia2,fstb,col="yellow2",add=T)
scatter3D(pia1,pia2,fstc,col="green4",add=T)
scatter3D(pia1,pia2,fsta,col="red2")
scatter3D(pia1,pia2,fstb,col="yellow2",add=T)
scatter3D(pia1,pia2,fstc,col="green4",add=T)
scatter3D(pia1,pia2,fsta,col="coral")
scatter3D(pia1,pia2,fstb,col="yellow2",add=T)
scatter3D(pia1,pia2,fstc,col="green4",add=T)
scatter3D(pia1,pia2,fstc,col="green3",add=T)
scatter3D(pia1,pia2,fsta,col="coral")
scatter3D(pia1,pia2,fstb,col="yellow2",add=T)
scatter3D(pia1,pia2,fstc,col="green3",add=T)
scatter3D(pia1,pia2,fsta,col="coral")
scatter3D(pia1,pia2,fstb,col="yellow1",add=T)
scatter3D(pia1,pia2,fstc,col="green3",add=T)
library(phyclust)
ms(nsamp=22, nreps=1, opts="-t 200 -r 2000 500")
ms(nsam=22, nreps=1, opts="-t 200 -r 2000 500")
ms(nsam=22, nreps=1, opts="-t 2000 -r 2000 500")
x<-ms(nsam=22, nreps=1, opts="-t 2000 -r 2000 500")
x[3]
x<-ms(nsam=22, nreps=1, opts="-t 200 -r 2000 500")
x[3]
x<-ms(nsam=22, nreps=1, opts="-t 200 -r 2000 500")
x[3]
x<-ms(nsam=22, nreps=1, opts="-t 200 -r 2000 500")
x[3]
x<-ms(nsam=22, nreps=1, opts="-t 200 -r 2000 500")
x[3]
x<-ms(nsam=22, nreps=1, opts="-t 200 -r 2000 500")
x[3]
x[3]
x<-ms(nsam=22, nreps=1, opts="-t 500 -r 2000 500")
x[3]
x<-ms(nsam=22, nreps=1, opts="-t 500 -r 2000 500")
x[3]
x<-ms(nsam=22, nreps=1, opts="-t 500 -r 2000 500")
theta<-runif(1,100,1000)
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r 2000 1000")
)
for(i in 1:1000){
theta<-runif(1,100,1000)
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r 2000 1000"))
data<-c(theta,x[3])
table<-rbind(table,data)
}
theta<-runif(1,100,1000)
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r 2000 1000"))
data<-c(theta,x[3])
data
strsplit(x[3]," ")[2]
strsplit(x[3]," ")
strsplit(x[3]," ")[[1]][1]
strsplit(x[3]," ")[[1]][2]
theta<-runif(1,100,1000)
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r 2000 1000"))
data<-c(theta,as.numeric(strsplit(x[3]," ")[[1]][2]))
table<-rbind(table,data)
data
table
tab<-NULL
for(i in 1:1000){
theta<-runif(1,100,1000)
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r 2000 1000"))
data<-c(theta,as.numeric(strsplit(x[3]," ")[[1]][2]))
tab<-rbind(tab,data)
print(i)
}
1000000*4*500000*10e-9
1000000*4*500000*10e-10
theta<-runif(1,2000,2000)
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r 2000 1000"))
x
data<-c(theta,as.numeric(strsplit(x[3]," ")[[1]][2]))
data
1000000*4*5000000*10e-10
1000000*4*2000000*10e-10
theta<-runif(1,8000,8000)
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r 2000 1000"))
data<-c(theta,as.numeric(strsplit(x[3]," ")[[1]][2]))
data
1000000*4*100000*10e-10
1000000*4*500000*10e-10
theta<-runif(1,2000,2000)
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r 2000 1000"))
1000000*4*500000*10e-9
1000000*4*100000*10e-9
1000000*4*100000*10e-9
theta<-runif(1,4000,4000)
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r 2000 1000"))
data<-c(theta,as.numeric(strsplit(x[3]," ")[[1]][2]))
data
1000000*4*200000*10e-9
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r 2000 1000"))
x
data<-c(theta,as.numeric(strsplit(x[3]," ")[[1]][2]))
data
theta<-runif(1,8000,8000)
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r 2000 1000"))
data<-c(theta,as.numeric(strsplit(x[3]," ")[[1]][2]))
data
theta<-runif(1,8000,8000)
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r 2000 1000"))
data<-c(theta,as.numeric(strsplit(x[3]," ")[[1]][2]))
tab<-rbind(tab,data)
tab
data
tab<-NULL
for(i in 1:100){
theta<-runif(1,50000,500000)
theta<-1000000*4*theta*10e-9
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r 2000 1000"))
data<-c(theta,as.numeric(strsplit(x[3]," ")[[1]][2]))
tab<-rbind(tab,data)
print(i)
}
tab<-NULL
for(i in 1:100){
Ne<-runif(1,50000,500000)
theta<-1000000*4*Ne*10e-9
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r 2000 1000"))
data<-c(Ne,as.numeric(strsplit(x[3]," ")[[1]][2]))
tab<-rbind(tab,data)
print(i)
}
tab<-NULL
tab<-NULL
for(i in 1:100){
Ne<-runif(1,50000,500000)
r<-4N*1
theta<-1000000*4*Ne*10e-9
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r",r,"1000"))
data<-c(Ne,as.numeric(strsplit(x[3]," ")[[1]][2]))
tab<-NULL
for(i in 1:100){
Ne<-runif(1,50000,500000)
r<-4N*1
tab<-NULL
for(i in 1:100){
Ne<-runif(1,50000,500000)
ar<-4N*1
tab<-NULL
for(i in 1:100){
Ne<-runif(1,50000,500000)
r<-4*1
theta<-1000000*4*Ne*10e-9
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r",r,"1000"))
data<-c(Ne,as.numeric(strsplit(x[3]," ")[[1]][2]))
tab<-rbind(tab,data)
print(i)
}
plot(tab[,1]~tab[,2])
tab<-NULL
for(i in 1:100){
Ne<-runif(1,50000,500000)
r<-4*1
theta<-1000000*4*Ne*10e-9
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r",r,"1000"))
data<-c(theta,Ne,as.numeric(strsplit(x[3]," ")[[1]][2]))
tab<-rbind(tab,data)
print(i)
}
plot(tab[,1]~tab[,2])
plot(tab[,1]~tab[,3])
plot(tab[,2]~tab[,3])
?lm
abline(lm(tab[,2]~tab[,3]))
tab<-NULL
for(i in 1:100){
Ne<-runif(1,50000,500000)
r<-4*1
theta<-1000000*4*Ne*1e-9
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r",r,"1000"))
data<-c(theta,Ne,as.numeric(strsplit(x[3]," ")[[1]][2]))
tab<-rbind(tab,data)
print(i)
}
plot(tab[,2]~tab[,3])
tab<-NULL
for(i in 1:100){
Ne<-runif(1,100000,5000000)
r<-4*1
theta<-1000000*4*Ne*1e-9
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r",r,"1000"))
data<-c(theta,Ne,as.numeric(strsplit(x[3]," ")[[1]][2]))
tab<-rbind(tab,data)
print(i)
}
plot(tab[,2]~tab[,3])
abline(lm(tab[,2]~tab[,3]))
for(i in 1:500){
Ne<-runif(1,100000,5000000)
r<-4*1
theta<-1000000*4*Ne*1e-9
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,"-r",r,"1000"))
data<-c(theta,Ne,as.numeric(strsplit(x[3]," ")[[1]][2]))
tab<-rbind(tab,data)
print(i)
}
plot(tab[,2]~tab[,3])
abline(lm(tab[,2]~tab[,3]))
36000/1000000
tab<-NULL
for(i in 1:500){
Ne<-runif(1,100000,5000000)
r<-4*1
theta<-1000000*4*Ne*1e-9
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta,))#"-r",r,"1000"))
data<-c(theta,Ne,as.numeric(strsplit(x[3]," ")[[1]][2]))
data
tab<-rbind(tab,data)
print(i)
}
tab<-NULL
for(i in 1:500){
Ne<-runif(1,100000,5000000)
r<-4*1
theta<-1000000*4*Ne*1e-9
x<-ms(nsam=22, nreps=1, opts=paste("-t",theta))#"-r",r,"1000"))
data<-c(theta,Ne,as.numeric(strsplit(x[3]," ")[[1]][2]))
data
tab<-rbind(tab,data)
print(i)
}
plot(tab[,2]~tab[,3])
install.packages("devtools")
library(devtools)
ls
ls
library(devtools)
library(help=devtools)
?build
build("PipeMaster")
rm
(list=
ls
())
rm(list=ls())
list.files()
x<-list.files()
x
package.skeleton("PipeMaster",list=x)
x
?package.skeleton("PipeMaster",x)
package.skeleton("PipeMaster",code_files=x)
package.skeleton("PipeMaster")
library(devtools)
